% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SNN.R
\name{BuildTopicSNN}
\alias{BuildTopicSNN}
\title{Build SNN graph}
\usage{
BuildTopicSNN(object, k.param = 30, k.scale = 25, plot.SNN = FALSE,
  prune.SNN = 1/15, print.output = TRUE, clusters = NULL, seed = 0,
  cluster.method = "SNN", perplexity = 15, color.by.sample, tsne = NULL,
  layout = NULL, ...)
}
\arguments{
\item{object}{Topic matrix obtained with compute.lda() from cellTree package}

\item{k.param}{Defines k for the k-nearest neighbor algorithm}

\item{k.scale}{Granularity option for k.param}

\item{plot.SNN}{Plot the SNN graph}

\item{prune.SNN}{Sets the cutoff for acceptable Jaccard distances when
computing the neighborhood overlap for the SNN construction. Any edges with
values less than or equal to this will be set to 0 and removed from the SNN
graph. Essentially sets the strigency of pruning (0 --- no pruning, 1 ---
prune everything).}

\item{print.output}{Whether or not to print output to the console}

\item{clusters}{Clusters used to color vertices in SNN ntwork graph}

\item{seed}{Set random seed for t-SNE algorithm}

\item{cluster.method}{Chose method to use for clustering. "topic" will run
topic_clusters() and cluster features based on topic porportion using hierarchical
clustering with euclidean distances and ward.D2. Clusters are chosen using the
unsupervised cutreeDynamic function from dynamicTreeCut package. "SNN" will run
a network graph based algorithm using methods from the Seurat package.}

\item{perplexity}{Set perplexity for tsne if plot.SNN is TRUE}

\item{color.by.sample}{Color vertices by sample in network graph}

\item{tsne}{Two column matrix with tsne results, alternatively run tsne using preset parameters}

\item{layout}{Set custom layout of vertices in network graph. Will override t-SNE results}

\item{...}{Parameters passed to RunModularityClusteringspaceST() function used for clustering}

\item{algorithm}{Algorithm for modularity optimization (1 = original Louvain
algorithm; 2 = Louvain algorithm with multilevel refinement; 3 = SLM algorithm)}
}
\value{
SNN matrix
}
\description{
Build SNN graph
}
